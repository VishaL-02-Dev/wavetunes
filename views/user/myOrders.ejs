<head>
    <title>My Orders | WaveTunes</title>
    <%- include('./partials/user/header') %>
</head>

<body>
    <div class="container mx-auto px-4 py-8">
        <nav class="mb-8" aria-label="Breadcrumb">
            <ol class="flex text-sm">
                <li><a href="/" class="text-white hover:text-blue-700">Home</a></li>
                <li class="mx-2 text-white">/</li>
                <li class="text-white font-medium">My Orders</li>
            </ol>
        </nav>

        <h1 class="text-3xl font-bold mb-8 text-white">My Orders</h1>

        <!-- Filters -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <form id="filter-form" class="flex flex-col md:flex-row gap-4">
                <div class="flex-1">
                    <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Search by Order ID</label>
                    <input type="text" id="search" name="search" value="<%= search %>"
                        class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                        placeholder="Enter order ID">
                </div>
                <div class="flex-1">
                    <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Filter by Status</label>
                    <select id="status" name="status"
                        class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">All Statuses</option>
                        <option value="pending" <%=status==='pending' ? 'selected' : '' %>>Pending</option>
                        <option value="processing" <%=status==='processing' ? 'selected' : '' %>>Processing</option>
                        <option value="shipped" <%=status==='shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="delivered" <%=status==='delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="cancelled" <%=status==='cancelled' ? 'selected' : '' %>>Cancelled</option>
                        <option value="returned" <%=status==='returned' ? 'selected' : '' %>>Returned</option>
                    </select>
                </div>
                <div class="flex-1">
                    <label for="sort" class="block text-sm font-medium text-gray-700 mb-1">Sort by Date</label>
                    <select id="sort" name="sort"
                        class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="desc" <%=sortOrder==='desc' ? 'selected' : '' %>>Newest First</option>
                        <option value="asc" <%=sortOrder==='asc' ? 'selected' : '' %>>Oldest First</option>
                    </select>
                </div>
                <div class="flex items-end">
                    <button type="submit"
                        class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition">
                        Apply Filters
                    </button>
                </div>
            </form>
        </div>

        <!-- Orders List -->
        <div class="space-y-6">
            <% if (orders && orders.length> 0) { %>
                <% orders.forEach(function(order) { %>
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <div class="flex justify-between items-center mb-4">
                            <div>
                                <h2 class="text-lg font-semibold text-gray-800">Order #<%= order.orderId %>
                                </h2>
                                <p class="text-sm text-gray-600">
                                    Placed on <%= order.date.toLocaleDateString('en-US', { year: 'numeric' ,
                                        month: 'long' , day: 'numeric' }) %>
                                </p>
                            </div>
                            <span
                                class="text-sm font-medium px-2 py-1 rounded-full <%= order.status === 'pending' ? 'bg-yellow-500 text-white' : order.status === 'processing' ? 'bg-blue-500 text-white' : order.status === 'shipped' ? 'bg-green-500 text-white' : order.status === 'delivered' ? 'bg-green-600 text-white' : order.status === 'cancelled' ? 'bg-red-500 text-white' : 'bg-gray-500 text-white' %>">
                                <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                            </span>
                        </div>
                        <div class="mb-4">
                            <p class="text-sm text-gray-700">
                                <span class="font-medium">Total Amount:</span> â‚¹<%= order.totalAmount.toFixed(2) %>
                            </p>
                            <p class="text-sm text-gray-700">
                                <span class="font-medium">Payment Method:</span>
                                <%= order.paymentMethod %>
                            </p>
                            <p class="text-sm text-gray-700">
                                <span class="font-medium">Shipping Address:</span>
                                <%= order.shippingAddress.address %>, <%= order.shippingAddress.city %>, <%=
                                            order.shippingAddress.state %> - <%= order.shippingAddress.pinCode %>
                            </p>
                        </div>
                        <div class="flex justify-between items-center">
                            <a href="/user/orders/<%= order._id %>"
                                class="text-blue-600 hover:text-blue-800 font-medium">
                                View Details
                            </a>
                            <% if (order.status==='pending' && order.paymentMethod==='Razorpay' ) { %>
                                <button type="button"
                                    class="retry-payment-btn bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition"
                                    data-order-id="<%= order._id %>">
                                    Retry Payment
                                </button>
                                <% } %>
                        </div>
                    </div>
                    <% }); %>
                        <% } else { %>
                            <div class="text-center text-gray-600">
                                <p>No orders found.</p>
                            </div>
                            <% } %>
        </div>

        <!-- Pagination -->
        <% if (totalPages> 1) { %>
            <div class="mt-8 flex justify-center space-x-2">
                <% for(let i=1; i <=totalPages; i++) { %>
                    <a href="/user/myOrders?page=<%= i %>&limit=<%= limit %>&status=<%= status %>&search=<%= search %>&sort=<%= sortOrder %>"
                        class="px-4 py-2 border border-gray-300 rounded-md <%= i === currentPage ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100' %>">
                        <%= i %>
                    </a>
                    <% } %>
            </div>
            <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterForm = document.getElementById('filter-form');
            const retryPaymentButtons = document.querySelectorAll('.retry-payment-btn');

            // Handle filter form submission
            filterForm.addEventListener('submit', function (e) {
                e.preventDefault();
                const search = document.getElementById('search').value;
                const status = document.getElementById('status').value;
                const sort = document.getElementById('sort').value;
                window.location.href = `/user/myOrders?search=${encodeURIComponent(search)}&status=${status}&sort=${sort}&limit=<%= limit %>`;
            });

            // Handle retry payment
            retryPaymentButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const orderId = this.getAttribute('data-order-id');
                    this.disabled = true;
                    this.textContent = 'Processing...';

                    try {
                        const response = await fetch('/user/checkout/retryRazorpayPayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ orderId })
                        });
                        const data = await response.json();

                        if (!data.success) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message
                            });
                            this.disabled = false;
                            this.textContent = 'Retry Payment';
                            return;
                        }

                        const { order, key, amount, userInfo, pendingOrderId } = data;

                        const options = {
                            key: key,
                            amount: order.amount,
                            currency: 'INR',
                            name: 'WaveTunes',
                            description: 'Order Payment Retry',
                            image: '/images/logo.png',
                            order_id: order.id,
                            handler: function (response) {
                                // Create a form to submit the verification data to the server
                                const form = document.createElement('form');
                                form.method = 'POST';
                                form.action = '/user/checkout/verify-razorpay';

                                const fields = {
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_signature: response.razorpay_signature,
                                    discountType: order.notes.discountType
                                };

                                for (const [key, value] of Object.entries(fields)) {
                                    const input = document.createElement('input');
                                    input.type = 'hidden';
                                    input.name = key;
                                    input.value = value;
                                    form.appendChild(input);
                                }

                                document.body.appendChild(form);
                                form.submit();
                            },
                            prefill: {
                                name: userInfo.name,
                                email: userInfo.email,
                                contact: userInfo.contact
                            },
                            notes: {
                                address: 'WaveTunes Customer'
                            },
                            theme: {
                                color: '#3B82F6'
                            },
                            modal: {
                                ondismiss: function () {
                                    Swal.fire({
                                        icon: 'info',
                                        title: 'Payment Cancelled',
                                        text: 'Your order remains pending. You can retry the payment from My Orders.',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }
                            }
                        };

                        const rzp = new Razorpay(options);
                        rzp.open();
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error initiating payment retry'
                        });
                        console.error(error);
                        this.disabled = false;
                        this.textContent = 'Retry Payment';
                    }
                });
            });
        });
    </script>
</body>
</html>