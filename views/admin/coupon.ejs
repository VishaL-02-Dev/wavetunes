<%- include('partials/admin/header') %>
        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <header class="top-header">
                <div class="header-left"></div>
                <div class="header-center">
                    <a href="#" class="brand-name">WaveTune</a>
                </div>
                <div class="header-right">
                    <a id="logout-button" class="logout-btn" href="/admin/logout">Logout</a>
                </div>
            </header>

            <div class="content-wrapper">
                <div class="container-fluid">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2>Manage Coupons</h2>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                            <i class="bi bi-plus-circle"></i> Add New Coupon
                        </button>
                    </div>
                    <span class="text-white">Total Coupons: <%= totalCount %></span>
                </div>
                <!-- Search Bar -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <form action="" method="GET" class="d-flex mt-4">
                            <input type="text" name="search" class="form-control"
                                placeholder="Search coupons by code..."
                                value="<%= typeof search !== 'undefined' ? search : '' %>">
                            <button type="submit" class="btn btn-primary ms-2">
                                <i class="bi bi-search"></i>
                            </button>
                            <% if (typeof search !=='undefined' && search) { %>
                                <a href="/admin/coupons" class="btn btn-outline-secondary ms-2">Clear</a>
                            <% } %>
                        </form>
                    </div>
                    <div class="col-md-6">
                        <div class="d-flex justify-content-end mt-4">
                            <div class="me-2">
                                <select class="form-select" id="statusFilter" name="status">
                                    <option value="">All Status</option>
                                    <option value="active" <%= status === 'active' ? 'selected' : '' %>>Active</option>
                                    <option value="inactive" <%= status === 'inactive' ? 'selected' : '' %>>Inactive</option>
                                </select>
                            </div>
                            <div>
                                <select class="form-select" id="dateFilter" name="dateFilter">
                                    <option value="">All Time</option>
                                    <option value="upcoming" <%= dateFilter === 'upcoming' ? 'selected' : '' %>>Upcoming</option>
                                    <option value="active" <%= dateFilter === 'active' ? 'selected' : '' %>>Currently Active</option>
                                    <option value="expired" <%= dateFilter === 'expired' ? 'selected' : '' %>>Expired</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="content-wrapper">
                    <div class="container-fluid">
                        <table class="table table-bordered table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Sl.No</th>
                                    <th>Code</th>
                                    <th>Discount</th>
                                    <th>Type</th>
                                    <th>Min. Purchase</th>
                                    <th>Valid Till</th>
                                    <th>Usage</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% coupons.forEach((coupon, index) => { %>
                                    <tr>
                                        <td>
                                            <%= ((page - 1) * itemsPerPage) + index + 1 %>
                                        </td>
                                        <td>
                                            <span class="badge bg-dark"><%= coupon.code %></span>
                                        </td>
                                        <td>
                                            <% if(coupon.discountType === 'percentage') { %>
                                                <%= coupon.discountAmount %>%
                                                <% if(coupon.maxDiscount) { %>
                                                    (up to ₹<%= coupon.maxDiscount %>)
                                                <% } %>
                                            <% } else { %>
                                                ₹<%= coupon.discountAmount %>
                                            <% } %>
                                        </td>
                                        <td>
                                            <%= coupon.discountType === 'percentage' ? 'Percentage' : 'Fixed Amount' %>
                                        </td>
                                        <td>
                                            ₹<%= coupon.minimumPurchase %>
                                        </td>
                                        <td>
                                            <%= new Date(coupon.endDate).toLocaleDateString('en-IN', { day: '2-digit', 
                                                month: '2-digit', year: 'numeric' }) %>
                                        </td>
                                        <td>
                                            <%= coupon.usedCount %>/<%= coupon.maxUses === 0 ? '∞' : coupon.maxUses %>
                                        </td>
                                        <td>
                                            <% 
                                            const now = new Date();
                                            const startDate = new Date(coupon.startDate);
                                            const endDate = new Date(coupon.endDate);
                                            let status = '';
                                            let badgeClass = '';
                                            
                                            if (!coupon.isActive) {
                                                status = 'Inactive';
                                                badgeClass = 'bg-secondary';
                                            } else if (now < startDate) {
                                                status = 'Upcoming';
                                                badgeClass = 'bg-info';
                                            } else if (now > endDate) {
                                                status = 'Expired';
                                                badgeClass = 'bg-danger';
                                            } else if (coupon.maxUses > 0 && coupon.usedCount >= coupon.maxUses) {
                                                status = 'Exhausted';
                                                badgeClass = 'bg-warning';
                                            } else {
                                                status = 'Active';
                                                badgeClass = 'bg-success';
                                            }
                                            %>
                                            <span class="badge <%= badgeClass %>"><%= status %></span>
                                        </td>
                                        <td>
                                            <button class="btn btn-info btn-sm" onclick="viewCouponDetails('<%= coupon._id %>')">
                                                <i class="bi bi-info-circle"></i>
                                            </button>
                                            <button class="btn btn-warning btn-sm" onclick="editCoupon('<%= coupon._id %>')">
                                                <i class="bi bi-pencil-square"></i>
                                            </button>
                                            <button class="btn <%= coupon.isActive ? 'btn-danger' : 'btn-success' %> btn-sm" 
                                                    onclick="toggleCouponStatus('<%= coupon._id %>', '<%= coupon.isActive %>')">
                                                <i class="bi <%= coupon.isActive ? 'bi-toggle-off' : 'bi-toggle-on' %>"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                        <% if (totalPages > 1) { %>
                            <nav aria-label="Page navigation" class="mt-4">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item <%= page === 1 ? 'disabled' : '' %>">
                                        <a class="page-link"
                                            href="?page=<%= page - 1 %><%= typeof search !== 'undefined' && search ? '&search=' + encodeURIComponent(search) : '' %><%= typeof status !== 'undefined' && status ? '&status=' + status : '' %><%= typeof dateFilter !== 'undefined' && dateFilter ? '&dateFilter=' + dateFilter : '' %>"
                                            tabindex="-1">Previous</a>
                                    </li>
                                    
                                    <% for(let i=1; i <=totalPages; i++) { %>
                                        <li class="page-item <%= page === i ? 'active' : '' %>">
                                            <a class="page-link"
                                                href="?page=<%= i %><%= typeof search !== 'undefined' && search ? '&search=' + encodeURIComponent(search) : '' %><%= typeof status !== 'undefined' && status ? '&status=' + status : '' %><%= typeof dateFilter !== 'undefined' && dateFilter ? '&dateFilter=' + dateFilter : '' %>">
                                                <%= i %>
                                            </a>
                                        </li>
                                    <% } %>
                                    <li class="page-item <%= page === totalPages ? 'disabled' : '' %>">
                                        <a class="page-link"
                                            href="?page=<%= page + 1 %><%= typeof search !== 'undefined' && search ? '&search=' + encodeURIComponent(search) : '' %><%= typeof status !== 'undefined' && status ? '&status=' + status : '' %><%= typeof dateFilter !== 'undefined' && dateFilter ? '&dateFilter=' + dateFilter : '' %>">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Add/Edit Coupon Modal -->
            <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title text-black" id="addCouponModalLabel">Add New Coupon</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="couponForm">
                                <input type="hidden" id="couponId" name="couponId">
                                <div class="mb-3">
                                    <label for="couponCode" class="form-label text-black">Coupon Code</label>
                                    <input type="text" class="form-control" id="couponCode" name="code" required>
                                    <small class="form-text text-muted">Code will be automatically converted to uppercase.</small>
                                </div>
                                <div class="mb-3">
                                    <label for="discountType" class="form-label text-black">Discount Type</label>
                                    <select class="form-select" id="discountType" name="discountType" required>
                                        <option value="percentage">Percentage</option>
                                        <option value="fixed">Fixed Amount</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="discountAmount" class="form-label text-black">Discount Amount</label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" id="discountAmount" name="discountAmount" min="1" required>
                                        <span class="input-group-text" id="discountTypeLabel">%</span>
                                    </div>
                                </div>
                                <div class="mb-3" id="maxDiscountContainer">
                                    <label for="maxDiscount" class="form-label text-black">Maximum Discount (₹)</label>
                                    <input type="number" class="form-control" id="maxDiscount" name="maxDiscount" min="0">
                                    <small class="form-text text-muted">Leave empty for no maximum.</small>
                                </div>
                                <div class="mb-3">
                                    <label for="minimumPurchase" class="form-label text-black">Minimum Purchase Amount (₹)</label>
                                    <input type="number" class="form-control" id="minimumPurchase" name="minimumPurchase" min="0" value="0">
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="startDate" class="form-label text-black">Start Date</label>
                                        <input type="date" class="form-control" id="startDate" name="startDate" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="endDate" class="form-label text-black">End Date</label>
                                        <input type="date" class="form-control" id="endDate" name="endDate" required>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="maxUses" class="form-label text-black">Maximum Uses</label>
                                    <input type="number" class="form-control" id="maxUses" name="maxUses" min="0" value="1">
                                    <small class="form-text text-muted">Set to 0 for unlimited uses.</small>
                                </div>
                                <div class="mb-3 form-check">
                                    <input type="checkbox" class="form-check-input" id="isActive" name="isActive" checked>
                                    <label class="form-check-label text-black" for="isActive">Active</label>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="saveCouponBtn">Save Coupon</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Coupon Details Modal -->
            <div class="modal fade" id="couponDetailsModal" tabindex="-1" aria-labelledby="couponDetailsModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title text-black" id="couponDetailsModalLabel">Coupon Details</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body" id="couponDetailsContent">
                            <!-- Coupon details will be loaded here dynamically -->
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script>
        // Set today's date as the minimum for start date input
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').setAttribute('min', today);
            
            // Event listener for when start date changes
            document.getElementById('startDate').addEventListener('change', function() {
                document.getElementById('endDate').setAttribute('min', this.value);
            });

            // Toggle max discount field based on discount type
            document.getElementById('discountType').addEventListener('change', function() {
                const discountTypeLabel = document.getElementById('discountTypeLabel');
                const maxDiscountContainer = document.getElementById('maxDiscountContainer');
                
                if (this.value === 'percentage') {
                    discountTypeLabel.textContent = '%';
                    maxDiscountContainer.style.display = 'block';
                } else {
                    discountTypeLabel.textContent = '₹';
                    maxDiscountContainer.style.display = 'none';
                }
            });
        });

        // Event listeners for filter controls
        document.getElementById('statusFilter').addEventListener('change', function() {
            applyFilters();
        });

        document.getElementById('dateFilter').addEventListener('change', function() {
            applyFilters();
        });

        function applyFilters() {
            const status = document.getElementById('statusFilter').value;
            const dateFilter = document.getElementById('dateFilter').value;
            const searchParams = new URLSearchParams(window.location.search);

            // Update or set the status parameter
            if (status) {
                searchParams.set('status', status);
            } else {
                searchParams.delete('status');
            }

            // Update or set the dateFilter parameter
            if (dateFilter) {
                searchParams.set('dateFilter', dateFilter);
            } else {
                searchParams.delete('dateFilter');
            }

            // Reset to first page when filters change
            searchParams.set('page', 1);

            // Redirect with the new query parameters
            window.location.href = window.location.pathname + '?' + searchParams.toString();
        }

        // Function to view coupon details
        function viewCouponDetails(couponId) {
            fetch(`/admin/coupons/${couponId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const coupon = data.coupon;
                        
                        // Format dates
                        const startDate = new Date(coupon.startDate).toLocaleDateString('en-IN', { 
                            day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' 
                        });
                        const endDate = new Date(coupon.endDate).toLocaleDateString('en-IN', { 
                            day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' 
                        });
                        const createdAt = new Date(coupon.createdAt).toLocaleDateString('en-IN', { 
                            day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' 
                        });
                        
                        // Calculate status
                        const now = new Date();
                        const startDateObj = new Date(coupon.startDate);
                        const endDateObj = new Date(coupon.endDate);
                        let status = '';
                        let statusClass = '';
                        
                        if (!coupon.isActive) {
                            status = 'Inactive';
                            statusClass = 'bg-secondary';
                        } else if (now < startDateObj) {
                            status = 'Upcoming';
                            statusClass = 'bg-info';
                        } else if (now > endDateObj) {
                            status = 'Expired';
                            statusClass = 'bg-danger';
                        } else if (coupon.maxUses > 0 && coupon.usedCount >= coupon.maxUses) {
                            status = 'Exhausted';
                            statusClass = 'bg-warning';
                        } else {
                            status = 'Active';
                            statusClass = 'bg-success';
                        }

                        let content = `
                        <div class="row mb-3">
                            <div class="col-12 text-center">
                                <h4 class="text-black">${coupon.code}</h4>
                                <span class="badge ${statusClass}">${status}</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <p><strong>Discount:</strong></p>
                                <p><strong>Minimum Purchase:</strong></p>
                                <p><strong>Maximum Uses:</strong></p>
                                <p><strong>Usage Count:</strong></p>
                                <p><strong>Valid From:</strong></p>
                                <p><strong>Valid Until:</strong></p>
                                <p><strong>Created On:</strong></p>
                            </div>
                            <div class="col-6">
                                <p>${coupon.discountType === 'percentage' ? coupon.discountAmount + '%' : '₹' + coupon.discountAmount}
                                   ${coupon.discountType === 'percentage' && coupon.maxDiscount ? ' (up to ₹' + coupon.maxDiscount + ')' : ''}
                                </p>
                                <p>₹${coupon.minimumPurchase}</p>
                                <p>${coupon.maxUses === 0 ? 'Unlimited' : coupon.maxUses}</p>
                                <p>${coupon.usedCount}</p>
                                <p>${startDate}</p>
                                <p>${endDate}</p>
                                <p>${createdAt}</p>
                            </div>
                        </div>`;

                        document.getElementById('couponDetailsContent').innerHTML = content;
                        const modal = new bootstrap.Modal(document.getElementById('couponDetailsModal'));
                        modal.show();
                    } else {
                        Swal.fire('Error', data.message || 'Failed to load coupon details', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Something went wrong', 'error');
                });
        }

        // Function to edit coupon
        function editCoupon(couponId) {
            fetch(`/admin/coupons/${couponId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const coupon = data.coupon;
                        
                        // Update modal title
                        document.getElementById('addCouponModalLabel').textContent = 'Edit Coupon';
                        
                        // Fill form fields
                        document.getElementById('couponId').value = coupon._id;
                        document.getElementById('couponCode').value = coupon.code;
                        document.getElementById('discountType').value = coupon.discountType;
                        document.getElementById('discountAmount').value = coupon.discountAmount;
                        document.getElementById('maxDiscount').value = coupon.maxDiscount || '';
                        document.getElementById('minimumPurchase').value = coupon.minimumPurchase;
                        document.getElementById('startDate').value = new Date(coupon.startDate).toISOString().split('T')[0];
                        document.getElementById('endDate').value = new Date(coupon.endDate).toISOString().split('T')[0];
                        document.getElementById('maxUses').value = coupon.maxUses;
                        document.getElementById('isActive').checked = coupon.isActive;
                        
                        // Update discount type label
                        const discountTypeLabel = document.getElementById('discountTypeLabel');
                        const maxDiscountContainer = document.getElementById('maxDiscountContainer');
                        
                        if (coupon.discountType === 'percentage') {
                            discountTypeLabel.textContent = '%';
                            maxDiscountContainer.style.display = 'block';
                        } else {
                            discountTypeLabel.textContent = '₹';
                            maxDiscountContainer.style.display = 'none';
                        }
                        
                        // Show modal
                        const modal = new bootstrap.Modal(document.getElementById('addCouponModal'));
                        modal.show();
                    } else {
                        Swal.fire('Error', data.message || 'Failed to load coupon data', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Something went wrong', 'error');
                });
        }

        // Function to toggle coupon status
        function toggleCouponStatus(couponId, currentStatus) {
            Swal.fire({
                title: currentStatus ? 'Deactivate Coupon?' : 'Activate Coupon?',
                text: currentStatus ? 'This will prevent users from using this coupon.' : 'This will allow users to use this coupon.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: currentStatus ? 'Yes, deactivate it!' : 'Yes, activate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/coupons/${couponId}/toggle-status`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ isActive: !currentStatus }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire(
                                'Updated!',
                                `Coupon has been ${currentStatus ? 'deactivated' : 'activated'}.`,
                                'success'
                            ).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire('Error', data.message || 'Failed to update coupon status', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire('Error', 'Something went wrong', 'error');
                    });
                }
            });
        }

        // Save coupon button event
        document.getElementById('saveCouponBtn').addEventListener('click', function() {
            const couponForm = document.getElementById('couponForm');
            
            // Basic form validation
            if (!couponForm.checkValidity()) {
                couponForm.reportValidity();
                return;
            }
            
            // Get form data
            const formData = new FormData(couponForm);
            const couponData = Object.fromEntries(formData.entries());
            
            // Handle checkbox values
            couponData.isActive = document.getElementById('isActive').checked;
            
            // Convert empty values
            if (couponData.maxDiscount === '') {
                delete couponData.maxDiscount;
            }
            
            // Determine if it's an add or edit operation
            const isEdit = couponData.couponId && couponData.couponId !== '';
            const url = isEdit ? `/admin/coupons/${couponData.couponId}` : '/admin/coupons';
            const method = isEdit ? 'PUT' : 'POST';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(couponData),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addCouponModal'));
                    modal.hide();
                    Swal.fire('Success', isEdit ? 'Coupon updated successfully' : 'Coupon created successfully', 'success')
                        .then(() => {
                            window.location.reload();
                        });
                } else {
                    Swal.fire('Error', data.message || 'Failed to save coupon', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire('Error', 'Something went wrong', 'error');
            });
        });

        // Reset form when modal is closed
        document.getElementById('addCouponModal').addEventListener('hidden.bs.modal', function() {
            document.getElementById('couponForm').reset();
            document.getElementById('couponId').value = '';
            document.getElementById('addCouponModalLabel').textContent = 'Add New Coupon';
            
            // Reset discount type display
            const discountTypeLabel = document.getElementById('discountTypeLabel');
            const maxDiscountContainer = document.getElementById('maxDiscountContainer');
            discountTypeLabel.textContent = '%';
            maxDiscountContainer.style.display = 'block';
            
            // Set today as minimum start date
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').value = today;
            document.getElementById('startDate').setAttribute('min', today);
            document.getElementById('endDate').value = '';
        });

        // Open modal with default values when "Add New Coupon" is clicked
        document.getElementById('addCouponModal').addEventListener('show.bs.modal', function(event) {
            if (!document.getElementById('couponId').value) {
                // Set default values for new coupon
                const today = new Date().toISOString().split('T')[0];
                document.getElementById('startDate').value = today;
                
                // Set default end date (7 days from today)
                const defaultEndDate = new Date();
                defaultEndDate.setDate(defaultEndDate.getDate() + 7);
                document.getElementById('endDate').value = defaultEndDate.toISOString().split('T')[0];
                
                // Other defaults
                document.getElementById('discountType').value = 'percentage';
                document.getElementById('minimumPurchase').value = '0';
                document.getElementById('maxUses').value = '1';
                document.getElementById('isActive').checked = true;
            }
        });

        // Validation for discount amount based on type
        document.getElementById('discountAmount').addEventListener('input', function() {
            if (document.getElementById('discountType').value === 'percentage' && this.value > 100) {
                this.value = 100;
            }
        });

        // Handle coupon code conversion to uppercase
        document.getElementById('couponCode').addEventListener('input', function() {
            this.value = this.value.toUpperCase();
        });
    </script>

    <%- include('partials/admin/footer') %>